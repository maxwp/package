PackageLoader - загрузчик пакетов.
Он выполняет множество фукнций;
часть пакетов можно подключить без PackageLoader'a, другую часть - нельзя.

==============================================================================
Что такое пакет?
==============================================================================
Пакет - это группировка любого кода.
Это могут быть классы, css-стили, javascript и так далее.

Есть простые пакеты, состоящие из пары классов (например, Checker), а есть
более сложные, целые модуля (например, Blog, Store и так далее).
Даже движок (Engine) - это тоже пакет, такой же как и все остальные.

Формально пакет - это директория в /packages/, внутри которой есть
файл include.php.
Имя пакета - это имя директории в которой пакет находится.
Обратите внимание, регистр имеет значение.

==============================================================================
Как подключать пакеты?
==============================================================================
Для начала, нужно подключить сам PackageLoader:

include('...../PackageLoader/include.php');

Если вы начали работать с Engine и он уже работает, значит Engine starter
самостоятельно уже подключил PackageLoader.

Далее, подключение любого пакета сводится к строке:

PackageLoader::Get()->import('package');
// или
PackageLoader::Get()->import('package', $paramsArray);

Вместо имени пакета (первый параметр) - можно передать полный путь к пакету.
Массив параметров (второй параметр) - не обязательный, по умолчанию его
используют только единицы из пакетов, например, CSSLess, JSPrototype
и некоторые другие.

==============================================================================
Где подключать пакеты?
==============================================================================
Где угодно.

Если вы используете Engine и пакеты вам нужны постоянно и почти по всех
скриптах - подключайте их в engine.config.php или engine.init.php
(engine.init.php - если так требует сам пакет).

Если пакет нужен только для одного скрипта, можете подключать его прямо в
этом скрипте, методе, функции.

Даже если вы повторно подключите один и тот же пакет - ошибки не будет.

==============================================================================
Что внутри концепции PackageLoader'a
==============================================================================
Внутри - spl_autoload для php-классов,
а также хранилище данных для подключенного css/js-контента.

Концепция очень схожа с ZF Autoload, но в отличии от ZF, PackageLoader в #wpp
подключает не только php-классы, но и css, js-контент.

==============================================================================
Подключение CSS или JS
==============================================================================
PackageLoader позволяет подключить CSS/JS файлы к текущему проекту, или даже
данные из этих файлов.

Например, в процессе работы над проектом, вам понадобилось подключить какой-то
javascript-код. Вы можете отправить этот код в PackageLoader, а в конце работы
движок (Engine или ваш) спросит у PackageLoader'a:
"дай мне весь CSS/JS код и файлы, которые в тебя наподключали".

Более того, PackageLoader умеет кешировать и компилировать передаваемые в
него данные. То есть, в него можно отправить 100 css-ок, а на выходе получить
одну, закешированную в один файл (и еще прогнанную через CSSTidy, CSSLess
если таковые пакеты подключены).